name: Sync from Hugging Face Space

on:
  repository_dispatch:
    types: [hf-space-updated]   # Tu peux déclencher ça depuis HF/Vercel
  workflow_dispatch: {}         # Lancer manuellement si besoin

permissions:
  contents: write

concurrency:
  group: sync-from-hf
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest

    env:
      # Renseigne ces secrets dans GitHub → Settings → Secrets and variables → Actions
      # HF_SPACE_ID: ex. "TonOrg/TonEspace" (format exact de la page HF)
      # HF_SPACE_BRANCH: ex. "main"
      # HF_TOKEN: (optionnel si Space public)
      HF_SPACE_ID: ${{ secrets.HF_SPACE_ID }}
      HF_SPACE_BRANCH: ${{ secrets.HF_SPACE_BRANCH }}
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      CLONE_DIR: ${{ runner.temp }}/hfspace

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install git-lfs & rsync
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y git-lfs rsync
          git lfs install

      - name: Clone HF Space
        run: |
          set -euxo pipefail
          rm -rf "$CLONE_DIR"

          # Auth header si token fourni (utile si Space privé)
          EXTRA=""
          if [ -n "${HF_TOKEN:-}" ]; then
            EXTRA='-c http.extraHeader=Authorization: Bearer '"$HF_TOKEN"
          fi

          git $EXTRA clone --branch "${HF_SPACE_BRANCH:-main}" \
            "https://huggingface.co/spaces/${HF_SPACE_ID}" "$CLONE_DIR"

      # --- BONUS : matérialiser les fichiers LFS (vraies binaires) ---
      - name: Materialize LFS files from HF clone
        working-directory: ${{ env.CLONE_DIR }}
        run: |
          set -euxo pipefail
          git lfs install
          git lfs fetch --all || true
          git lfs checkout || true

      - name: Mirror files from HF → repo (rsync, delete)
        run: |
          set -euxo pipefail
          rsync -av --delete \
            --exclude '.git/' \
            "$CLONE_DIR/" .

      - name: Commit & push changes (HF wins)
        run: |
          set -euxo pipefail
          BRANCH="${GITHUB_REF_NAME:-main}"

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Rien à faire ? On sort proprement.
          if git diff --quiet; then
            echo "No changes after sync. Exiting."
            exit 0
          fi

          # On neutralise les filtres LFS côté GitHub pour committer des binaires "plats"
          git -c filter.lfs.clean= \
              -c filter.lfs.smudge= \
              -c filter.lfs.process= \
              -c filter.lfs.required=false add -A

          git -c filter.lfs.clean= \
              -c filter.lfs.smudge= \
              -c filter.lfs.process= \
              -c filter.lfs.required=false commit \
              -m "chore(sync): mirror HF Space → GitHub $(date -u +%F-%H%M%SZ)"

          # On pousse en miroir (HF = vérité). --force-with-lease = prudent.
          git fetch origin "$BRANCH" || true
          git push --force-with-lease origin "HEAD:$BRANCH"
